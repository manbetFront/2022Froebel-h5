{"remainingRequest":"/Users/tanwen/project/2022Froebel-h5/node_modules/babel-loader/lib/index.js!/Users/tanwen/project/2022Froebel-h5/src/api/service.js","dependencies":[{"path":"/Users/tanwen/project/2022Froebel-h5/src/api/service.js","mtime":1669873346851},{"path":"/Users/tanwen/project/2022Froebel-h5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanwen/project/2022Froebel-h5/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfTWVzc2FnZTIgZnJvbSAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvbWVzc2FnZS5jc3MiOwppbXBvcnQgImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL2Jhc2UuY3NzIjsKaW1wb3J0IF9NZXNzYWdlIGZyb20gImVsZW1lbnQtdWkvbGliL21lc3NhZ2UiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvdGFud2VuL3Byb2plY3QvMjAyMkZyb2ViZWwtaDUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOyAvLyBpbXBvcnQgc3RvcmUgZnJvbSAiQC9zdG9yZSI7CgppbXBvcnQgeyBnZXRVc2VybmFtZUJ5UGxhdGZvcm0sIGlzQXBwIH0gZnJvbSAiQC9jb21tb24vanMvdXRpbHMuanMiOyAvLyBjcmVhdGUgYW4gYXhpb3MgaW5zdGFuY2UKCnZhciBzZXJ2aWNlID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiBwcm9jZXNzLmVudi5WVUVfQVBQX0JBU0VfQVBJIC8vcHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX0FQSSwgLy8gdXJsID0gYmFzZSB1cmwgKyByZXF1ZXN0IHVybAogIC8vIHdpdGhDcmVkZW50aWFsczogdHJ1ZSwgLy8gc2VuZCBjb29raWVzIHdoZW4gY3Jvc3MtZG9tYWluIHJlcXVlc3RzCiAgLy8gdGltZW91dDogNTAwMCAvLyByZXF1ZXN0IHRpbWVvdXQKCn0pOyAvLyByZXF1ZXN0IGludGVyY2VwdG9yCgpzZXJ2aWNlLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZSgKLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAvKiNfX1BVUkVfXyovCiAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShjb25maWcpIHsKICAgIHZhciBwbGF0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBwbGF0ID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgicGxhdGZvcm0iKTsKICAgICAgICAgICAgY29uZmlnLmhlYWRlcnNbInBsYXRmb3JtIl0gPSBwbGF0OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBjb25maWcpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpLCBmdW5jdGlvbiAoZXJyb3IpIHsKICAvLyBzdG9yZS5jb21taXQoJ3NldElzTG9hZGluZycsIGZhbHNlKQogIC8vIGRvIHNvbWV0aGluZyB3aXRoIHJlcXVlc3QgZXJyb3IKICBjb25zb2xlLmxvZyhlcnJvcik7IC8vIGZvciBkZWJ1ZwoKICBfTWVzc2FnZSh7CiAgICB0eXBlOiAid2FybmluZyIsCiAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlCiAgfSk7CgogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyByZXNwb25zZSBpbnRlcmNlcHRvcgoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKAovKioKICogSWYgeW91IHdhbnQgdG8gZ2V0IGh0dHAgaW5mb3JtYXRpb24gc3VjaCBhcyBoZWFkZXJzIG9yIHN0YXR1cwogKiBQbGVhc2UgcmV0dXJuICByZXNwb25zZSA9PiByZXNwb25zZQogKi8KCi8qKgogKiBEZXRlcm1pbmUgdGhlIHJlcXVlc3Qgc3RhdHVzIGJ5IGN1c3RvbSBjb2RlCiAqIEhlcmUgaXMganVzdCBhbiBleGFtcGxlCiAqIFlvdSBjYW4gYWxzbyBqdWRnZSB0aGUgc3RhdHVzIGJ5IEhUVFAgU3RhdHVzIENvZGUKICovCmZ1bmN0aW9uIChyZXNwb25zZSkgewogIC8vIHN0b3JlLmNvbW1pdCgnc2V0SXNMb2FkaW5nJywgZmFsc2UpCiAgdmFyIHJlcyA9IHJlc3BvbnNlLmRhdGE7CiAgcmV0dXJuIHJlczsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgLy8gc3RvcmUuY29tbWl0KCdzZXRJc0xvYWRpbmcnLCBmYWxzZSkKICAvLyBNZXNzYWdlKHsgdHlwZTond2FybmluZycsbWVzc2FnZTogZXJyb3IubWVzc2FnZSB9KTsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsKZXhwb3J0IGRlZmF1bHQgc2VydmljZTs="},{"version":3,"sources":["/Users/tanwen/project/2022Froebel-h5/src/api/service.js"],"names":["axios","getUsernameByPlatform","isApp","service","create","baseURL","process","env","VUE_APP_BASE_API","interceptors","request","use","config","plat","sessionStorage","getItem","headers","error","console","log","type","message","Promise","reject","response","res","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,SAASC,qBAAT,EAAgCC,KAAhC,QAA6C,sBAA7C,C,CAEA;;AACA,IAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADM,CACY;AACvC;AACA;;AAH2B,CAAb,CAAhB,C,CAMA;;AACAL,OAAO,CAACM,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,YAAAA,IADN,GACaC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CADb;AAEEH,YAAAA,MAAM,CAACI,OAAP,CAAe,UAAf,IAA6BH,IAA7B;AAFF,6CAGSD,MAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAAA;AAAA;AAAA;AAAA,KAME,UAACK,KAAD,EAAW;AACT;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAHS,CAGW;;AACpB,WAAQ;AAAEG,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,OAAO,EAAEJ,KAAK,CAACI;AAAlC,GAAR;;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeN,KAAf,CAAP;AACD,CAZH,E,CAeA;;AACAd,OAAO,CAACM,YAAR,CAAqBe,QAArB,CAA8Bb,GAA9B;AACE;;;;;AAKA;;;;;AAKA,UAACa,QAAD,EAAc;AACZ;AACA,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB;AACA,SAAOD,GAAP;AACD,CAfH,EAgBE,UAACR,KAAD,EAAW;AACT;AACA;AACA,SAAOK,OAAO,CAACC,MAAR,CAAeN,KAAf,CAAP;AACD,CApBH;AAuBA,eAAed,OAAf","sourcesContent":["import axios from \"axios\";\n// import store from \"@/store\";\nimport { Message } from \"element-ui\";\nimport { getUsernameByPlatform, isApp } from \"@/common/js/utils.js\";\n\n// create an axios instance\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API, //process.env.VUE_APP_BASE_API, // url = base url + request url\n  // withCredentials: true, // send cookies when cross-domain requests\n  // timeout: 5000 // request timeout\n});\n\n// request interceptor\nservice.interceptors.request.use(\n  async (config) => {\n    let plat = sessionStorage.getItem(\"platform\");\n    config.headers[\"platform\"] = plat;\n    return config;\n  },\n  (error) => {\n    // store.commit('setIsLoading', false)\n    // do something with request error\n    console.log(error); // for debug\n    Message({ type: \"warning\", message: error.message });\n    return Promise.reject(error);\n  }\n);\n\n// response interceptor\nservice.interceptors.response.use(\n  /**\n   * If you want to get http information such as headers or status\n   * Please return  response => response\n   */\n\n  /**\n   * Determine the request status by custom code\n   * Here is just an example\n   * You can also judge the status by HTTP Status Code\n   */\n  (response) => {\n    // store.commit('setIsLoading', false)\n    const res = response.data;\n    return res;\n  },\n  (error) => {\n    // store.commit('setIsLoading', false)\n    // Message({ type:'warning',message: error.message });\n    return Promise.reject(error);\n  }\n);\n\nexport default service;\n"]}]}