{"remainingRequest":"/Users/tanwen/project/2022Froebel-h5/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/tanwen/project/2022Froebel-h5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tanwen/project/2022Froebel-h5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tanwen/project/2022Froebel-h5/src/pages/newyearh5/index.vue?vue&type=template&id=75b84299&scoped=true&","dependencies":[{"path":"/Users/tanwen/project/2022Froebel-h5/src/pages/newyearh5/index.vue","mtime":1671099957842},{"path":"/Users/tanwen/project/2022Froebel-h5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanwen/project/2022Froebel-h5/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/tanwen/project/2022Froebel-h5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tanwen/project/2022Froebel-h5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicGNfY29udGFpbmVyIiB9LCBbCiAgICBfYygiaW1nIiwgewogICAgICBzdGF0aWNDbGFzczogImJhbm5lciIsCiAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vLi4vY29tbW9uL2ltZ3MvYmFubmVyQDJ4LnBuZyIpIH0KICAgIH0pLAogICAgX3ZtLl9tKDApLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyZWNlaXZlIiB9LCBbCiAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICJwb3MxIiwKICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uLy4uL2NvbW1vbi9pbWcvMi0yQDJ4LnBuZyIpIH0KICAgICAgfSksCiAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICJwb3MyIiwKICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uLy4uL2NvbW1vbi9pbWcvZGVuZ2xvbmcucG5nIikgfQogICAgICB9KSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogInJlY2VfYm94IiB9LAogICAgICAgIFsKICAgICAgICAgIF92bS5fbSgxKSwKICAgICAgICAgIF92bS5fbChfdm0uY2Vyc2l2ZWxpc3QsIGZ1bmN0aW9uKGl0ZW0pIHsKICAgICAgICAgICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IiB9LCBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsZWZ0IiB9LCBbCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKGl0ZW0ubGFiZWwpICsKICAgICAgICAgICAgICAgICAgICAgICI6IOS7iuaXpeWujOaIkOasoeaVsO+8miIgKwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKGl0ZW0ubnVtKSArCiAgICAgICAgICAgICAgICAgICAgICAi5qyhIgogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAicmlnaHQiIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJQcm9ncmVzcyIsIHsKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgY29sb3I6IF92bS5jb2xvciwKICAgICAgICAgICAgICAgICAgICAgICJ0ZXh0LWluc2lkZSI6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAic3Ryb2tlLXdpZHRoIjogMTAsCiAgICAgICAgICAgICAgICAgICAgICBwZXJjZW50YWdlOiBpdGVtLnBlcmNlbnQKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRvdGFsIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhpdGVtLnRvdGFsKSArICJWTkRLIikKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKQogICAgICAgICAgfSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImdyYW5kIiB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYWxsIiB9LCBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJudW0iIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiIOe0r+iuoeW3suWujOaIkOasoeaVsO+8miIpLAogICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLmFjdGl2aXR5Q29udGVudC50b3RhbF9udW1iZXIpICsgIuasoSIpCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibW9uIiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIiDntK/orqHlvanph5HvvJoiKSwKICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5hY3Rpdml0eUNvbnRlbnQubG90dGVyeV9tb25leSkgKyAiVk5ESyIpCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX20oMikKICAgICAgICAgIF0pCiAgICAgICAgXSwKICAgICAgICAyCiAgICAgICkKICAgIF0pLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjZW50ZXJfYm94IiB9LCBbCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJwZW9wbGVfYm94IiB9LAogICAgICAgIF92bS5fbChfdm0uaW1nbGlzdCwgZnVuY3Rpb24oaXRlbSkgewogICAgICAgICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAib25lX2JveCIgfSwgWwogICAgICAgICAgICBfYygiaW1nIiwgeyBzdGF0aWNDbGFzczogIndvbWFuIiwgYXR0cnM6IHsgc3JjOiBpdGVtLmltZyB9IH0pLAogICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9sbG93IiwKICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uLy4uL2NvbW1vbi9pbWcvMkAyeC5wbmciKSB9CiAgICAgICAgICAgIH0pLAogICAgICAgICAgICBfdm0uX20oMywgdHJ1ZSkKICAgICAgICAgIF0pCiAgICAgICAgfSksCiAgICAgICAgMAogICAgICApLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRvdGFsX3ByaWNlIiB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGVmdCIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgWwogICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICIg57Sv6K6h5a2Y5qy+6YeR6aKdOiAiICsKICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS5hY3Rpdml0eUNvbnRlbnQuYW1vdW50X3RvdGFsKSArCiAgICAgICAgICAgICAgICAgICJWTkRLICIKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKCJzcGFuIiwgWwogICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAi5bey6Kej6ZSB5Lq654mp77yaIiArCiAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS5hY3Rpdml0eUNvbnRlbnQuZGVsb2NrX2NvdW50KSArCiAgICAgICAgICAgICAgICAgICAgIuS9jSIKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJyaWdodCIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJQcm9ncmVzcyIsIHsKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgIGNvbG9yOiBfdm0uY29sb3IsCiAgICAgICAgICAgICAgICAgICJ0ZXh0LWluc2lkZSI6IHRydWUsCiAgICAgICAgICAgICAgICAgICJzdHJva2Utd2lkdGgiOiAxMCwKICAgICAgICAgICAgICAgICAgcGVyY2VudGFnZTogNTAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRvdGFsIiB9LCBbX3ZtLl92KCI4NzZWTkRLIildKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF92bS5fbSg0KQogICAgXSksCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImFjdGl2aXR5X2NvbnRlbnQiIH0sIFsKICAgICAgX2MoImltZyIsIHsKICAgICAgICBzdGF0aWNDbGFzczogInBvczEiLAogICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vLi4vY29tbW9uL2ltZy8yLTJAMngucG5nIikgfQogICAgICB9KSwKICAgICAgX2MoImltZyIsIHsKICAgICAgICBzdGF0aWNDbGFzczogInBvczIiLAogICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vLi4vY29tbW9uL2ltZy9kZW5nbG9uZy5wbmciKSB9CiAgICAgIH0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImFsbF9ib3giIH0sIFsKICAgICAgICBfdm0uX20oNSksCiAgICAgICAgX3ZtLl9tKDYpLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYm94X3RhYmxlIiB9LCBbCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRpbCIgfSwgWwogICAgICAgICAgICBfdm0uX3YoIiDikaAg5q+P5pel5a6M5oiQ5Lul5LiL5oqV5rOo5Lu75Yqh5Y2z5Y+v6I635b6X5a+55bqU5Lu75Yqh5b2p6YeR5aWW5Yqx44CCICIpCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInRhYmxlIiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX3ZtLl9tKDcpLAogICAgICAgICAgICAgIF92bS5fbChfdm0udGFibGUxLCBmdW5jdGlvbihpdGVtKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJib2R5IiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZXhjZWVkIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhpdGVtLmxhYmVsKSkKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZXhjZWVkIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCLmr4/ml6XmnInmlYjmipXmlL4iICsgX3ZtLl9zKGl0ZW0udGFzaykgKyAiVk5ESyIpCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgW192bS5fdihfdm0uX3MoaXRlbS5oYW5kc2VsKSArICJWTkRLIildKSwKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIFtfdm0uX3YoX3ZtLl9zKGl0ZW0ubGltaXQpKV0pCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDIKICAgICAgICAgICksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRpbDIiIH0sIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICIg6LS05aOr77ya5pys5Li76aKY5oqV5rOo5Lu75Yqh5q+P5pelMDA6MDDph43nva7vvIzlvZPml6Xoi6XmnKrovr7miJDku7vliqHvvIzmrKHml6XpnIDph43mlrDntK/orqHmnInmlYjmipXms6jku6Xojrflvpflr7nlupTlpZblirHjgIIgIgogICAgICAgICAgICApCiAgICAgICAgICBdKQogICAgICAgIF0pLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYm94X3RhYmxlIiB9LCBbCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRpbCIgfSwgWwogICAgICAgICAgICBfdm0uX3YoIiDikaAg5q+P5pel5a6M5oiQ5Lul5LiL5oqV5rOo5Lu75Yqh5Y2z5Y+v6I635b6X5a+55bqU5Lu75Yqh5b2p6YeR5aWW5Yqx44CCICIpCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInRhYmxlIiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX3ZtLl9tKDgpLAogICAgICAgICAgICAgIF92bS5fbChfdm0udGFibGUyLCBmdW5jdGlvbihpdGVtKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJib2R5IHRocmVlIiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCBbX3ZtLl92KF92bS5fcyhpdGVtLnBlb3BsZSkgKyAi5L2NIildKSwKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIFtfdm0uX3YoX3ZtLl9zKGl0ZW0udGFzaykgKyAi5LiqIildKSwKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIFtfdm0uX3YoX3ZtLl9zKGl0ZW0uaGFuZHNlbCkgKyAiVk5ESyIpXSkKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMgogICAgICAgICAgKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGlsMiIgfSwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgIiDotLTlo6vvvJrmnKzkuLvpopjmipXms6jku7vliqHmr4/ml6UwMDowMOmHjee9ru+8jOW9k+aXpeiLpeacqui+vuaIkOS7u+WKoe+8jOasoeaXpemcgOmHjeaWsOe0r+iuoeacieaViOaKleazqOS7peiOt+W+l+WvueW6lOWlluWKseOAgiAiCiAgICAgICAgICAgICkKICAgICAgICAgIF0pCiAgICAgICAgXSksCiAgICAgICAgX3ZtLl9tKDkpLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZ290b3AiIH0sIFtfdm0uX3YoIuWbnuWIsOmhtumDqCIpXSkKICAgICAgXSksCiAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICJib3R0b21faW1nIiwKICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uLy4uL2NvbW1vbi9pbWcvaW52YWxpZC1uYW1lQDJ4LnBuZyIpIH0KICAgICAgfSkKICAgIF0pCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0b3BfY29udGVudCIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvd19vbmUiIH0sIFsKICAgICAgICBfYygiZGl2IiwgW192bS5fdigi44CQ5rS75Yqo5pe26Ze044CRIildKSwKICAgICAgICBfYygicCIsIFtfdm0uX3YoIjIwMjMvMDEvMDEgLSAyMDIzLzAxLzA2IildKQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3dfb25lIiB9LCBbCiAgICAgICAgX2MoImRpdiIsIFtfdm0uX3YoIuOAkOa0u+WKqOWvueixoeOAkSIpXSksCiAgICAgICAgX2MoInAiLCBbX3ZtLl92KCLlhajkvZPkvJrlkZgiKV0pCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvd19vbmUiIH0sIFsKICAgICAgICBfYygiZGl2IiwgW192bS5fdigi44CQ5rS75Yqo5bmz5Y+w44CRIildKSwKICAgICAgICBfYygicCIsIFtfdm0uX3YoIuaMh+WumuW5s+WPsCIpXSkKICAgICAgXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGl0bGUiIH0sIFsKICAgICAgX2MoImltZyIsIHsgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi8uLi9jb21tb24vaW1nLzItNEAyeC5wbmciKSB9IH0pLAogICAgICBfYygiZGl2IiwgW192bS5fdigi6aKG5Y+W6K6w5b2VIildKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJidG4iIH0sIFsKICAgICAgX2MoImltZyIsIHsgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi8uLi9jb21tb24vaW1nLzRAMngucG5nIikgfSB9KSwKICAgICAgX2MoImRpdiIsIFtfdm0uX3YoIumihuWPliIpXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibW9kZWwiIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ1bmxvY2siIH0sIFtfYygiZGl2IiwgW192bS5fdigi6Kej6ZSBIildKV0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNlbnRlcl9ib3QiIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyYWlzZSIgfSwgW192bS5fdigi5Yqg56CB5b2p6YeR77yaODk4OTc3IFZOREsiKV0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImJ0biIgfSwgW19jKCJkaXYiLCBbX3ZtLl92KCLpooblj5YiKV0pXSkKICAgIF0pCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGl0bGUiIH0sIFsKICAgICAgX2MoImltZyIsIHsgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi8uLi9jb21tb24vaW1nLzFAMngucG5nIikgfSB9KSwKICAgICAgX2MoImRpdiIsIFtfdm0uX3YoIua0u+WKqOWGheWuuSIpXSksCiAgICAgIF9jKCJpbWciLCB7IGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vLi4vY29tbW9uL2ltZy8yLTNAMngucG5nIikgfSB9KQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3dpbmZvIiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93X29uZSIgfSwgWwogICAgICAgIF9jKCJkaXYiLCBbX3ZtLl92KCLjgJDmtLvliqjlubPlj7DjgJEiKV0pLAogICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogIm1vcmUiIH0sIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiDkvJrlkZjkuo4yMDIzLjAxLjAxLTIwMjMuMDEuMDXmnJ/pl7TvvIzlrozmiJDku6XkuIvku7vliqHljbPlj6/ojrflvpfjgJDnpo/npoTlj4zmlLbot6jmlrDlubTjgJHlpZblirHjgIIgIgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImhlYWRlciIgfSwgWwogICAgICBfYygiZGl2IiwgW192bS5fdigi5ri45oiP5bmz5Y+wIildKSwKICAgICAgX2MoImRpdiIsIFtfdm0uX3YoIuS7u+WKoSIpXSksCiAgICAgIF9jKCJkaXYiLCBbX3ZtLl92KCLku7vliqHlvanph5EiKV0pLAogICAgICBfYygiZGl2IiwgW192bS5fdigi5q+P5pel5Lu75Yqh5LiK6ZmQIildKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXIgdGhyZWUiIH0sIFsKICAgICAgX2MoImRpdiIsIFtfdm0uX3YoIuino+mUgeS6uueJqSIpXSksCiAgICAgIF9jKCJkaXYiLCBbX3ZtLl92KCLlrozmiJDku7vliqEiKV0pLAogICAgICBfYygiZGl2IiwgW192bS5fdigi6aKd5aSW5Yqg56CB5b2p6YeRIildKQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJkZXNjIiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic3RhdGUiIH0sIFtfdm0uX3YoIuOAkOa0u+WKqOivtOaYjuOAkSIpXSksCiAgICAgIF92bS5fdigKICAgICAgICAiIDEu5pys5LyY5oOg6ZyA5Lya5ZGY5Zyo5rS75Yqo5oyH5a6a5pe26Ze05YaF6L+b6KGM54K55Ye76aKG5Y+W5b2p6YeR77yM6LaF5pe25Y2z6KeG5Li65pS+5byD6K+l5rS75Yqo5aWW5Yqx44CCIgogICAgICApLAogICAgICBfYygiYnIiKSwKICAgICAgX3ZtLl92KAogICAgICAgICIgMi7mnKzkvJjmg6DmiJDlip/pooblj5blkI7kuI3og73lj5bmtojvvIzmiYDojrflvanph5HpnIDlnKjlrozmiJA15YCN5rWB5rC0KOS4jeWQq+aymeW3tOS9k+iCsuWSjOW9qeelqCnljbPlj6/mj5DmrL7jgIIiCiAgICAgICksCiAgICAgIF9jKCJiciIpLAogICAgICBfdm0uX3YoIiAzLuacrOS8mOaDoOaJgOmcgOWtmOasvuWSjOaKleazqOS4jeS4juWFtuS7lua0u+WKqOWFseS6q++8jOWPr+S4jui/lOawtOa0u+WKqOWFseS6q+OAgiIpLAogICAgICBfYygiYnIiKSwKICAgICAgX3ZtLl92KAogICAgICAgICIgNC7mnKzkvJjmg6Dku4Xlr7nlt7Lnu5PnrpflubbkuqfnlJ/ovpPotaLnu5PmnpznmoTmipXms6jov5vooYzorqHnrpfjgILmiYDmnInmi5Lnu53mipXms6jvvIzml6DmlYjmipXms6jvvIzmiZPlubPvvIzku7vkvZXlh7rnjrDlr7nmirzmg4XlhrXnmoTmipXms6jlj4rmuK/otZTiiaQwLjfjgIHmrKfotZTiiaQxLjfmiJblhbbku5blr7nlupTotZTnjofvvIzkuLLlhbPmipXms6jlsIbkuI3orqHnrpflnKjlhoXjgIIiCiAgICAgICksCiAgICAgIF9jKCJiciIpLAogICAgICBfdm0uX3YoIiA1LuacrOS8mOaDoOmBteW+qk1hbkJldFjkuIfljZrjgJDkuIDoiKzkvJjmg6Dop4TliJnkuI7mnaHmrL7jgJHjgIIiKSwKICAgICAgX2MoImJyIikKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}